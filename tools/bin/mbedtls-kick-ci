#!/bin/sh

set -eu

script=$(basename -- "$0")
usage="$script: usage: $script PR_NUMBER [all|internal|internal-pr-head|internal-pr-merge|openci|...]"

host_internal_ci=jenkins-mbedtls.oss.arm.com
host_open_ci=mbedtls.trustedfirmware.org

: ${XDG_CONFIG_HOME:=~/.config}

# ~/.config/mbedtls/ci-tokens.sh needs to contain the Jenkins user and API
# token for each CI, e.g.
#
# JENKINS_INTERNAL_USER_ID=user-id-for-internal-ci
# JENKINS_INTERNAL_API_TOKEN=1111111111111111111111111111111111
# JENKINS_OPENCI_USER_ID=user-id-for-open-ci
# JENKINS_OPENCI_API_TOKEN=2222222222222222222222222222222222
#
# To get the user ID, go to Jenkins, e.g. https://mbedtls.trustedfirmware.org/,
# click your name in the top right, then the Status page should show your Jenkins
# user ID. Both internal and OpenCI user names will almost certainly be the same
# as your GitHub ID.
#
# To get an API token, choose Configure from your user page, click Add new Token,
# give it a name, then click Generate. You get one chance to copy it, so do it
# now! Then put it into ~/.config/mbedtls/ci-tokens.sh.
#
# Make sure ~/.config/mbedtls/ci-tokens.sh is chmod 0600.

. "$XDG_CONFIG_HOME/mbedtls/ci-tokens.sh"

kick_one () {
    # kick_one DESC USER TOKEN URL
    desc="$1"
    user="$2"
    token="$3"
    url="$4"
    echo "$desc\\c"
    OUTPUT=$(curl -s -X POST --user $user:$token "$url")
    if [ -z "$OUTPUT" ]; then
        echo " started"
    else
        if echo "$OUTPUT" | fgrep -q "Error 404 Not Found"; then
            echo " - PR $PR not found"
            exit 1
        else
            echo " - FAILED: \\c"
            echo "$OUTPUT" | perl -n -e 'print "$1\n" if /<title>(.*?)<.title>/;'
            exit 2
        fi
    fi
    did_something=1
}

if [ $# -eq 1 ]; then
    set -- "$1" all
fi

if [ $# != 2 ]; then
    echo $usage 1>&2
    exit 2
fi

PR="$1"
SCOPE="$2"

case "$PR" in
    [0-9][0-9][0-9][0-9]) : ;;          # all Mbed TLS PRs are four digits for now
    *) echo $usage 1>&2; exit 2 ;;      # doesn't look like a number
esac

did_something=0

case "$SCOPE" in
    all|internal|internal-pr-head )
        kick_one internal-pr-head $JENKINS_INTERNAL_USER_ID $JENKINS_INTERNAL_API_TOKEN "https://$host_internal_ci/job/mbed-tls-pr-head/view/change-requests/job/PR-$PR-head/build/api/json?delay=0sec"
        ;;
esac

case $SCOPE in
    all|internal|internal-pr-merge)
        kick_one internal-pr-merge $JENKINS_INTERNAL_USER_ID $JENKINS_INTERNAL_API_TOKEN "https://$host_internal_ci/job/mbed-tls-pr-merge/view/change-requests/job/PR-$PR-merge/build/api/json?delay=0sec"
        ;;
esac

case $SCOPE in
    all|openci|openci-pr-head)
        kick_one openci-pr-head $JENKINS_OPENCI_USER_ID $JENKINS_OPENCI_API_TOKEN "https://$host_open_ci/job/mbed-tls-pr-head/view/change-requests/job/PR-$PR-head/build/api/json?delay=0sec"
        ;;
esac

case $SCOPE in
    all|openci|openci-pr-merge)
        kick_one openci-pr-merge $JENKINS_OPENCI_USER_ID $JENKINS_OPENCI_API_TOKEN "https://$host_open_ci/job/mbed-tls-pr-merge/view/change-requests/job/PR-$PR-merge/build/api/json?delay=0sec"
        ;;
esac

if [ "$did_something" != 1 ]; then
    echo $usage 1>&2
    exit 2
fi
